provider "amazon" {
  region = "us_east_1"
}
resource "aws_instance" "demo_server" {
  ami                    = "ami-04cb4ca688797756f"
  instance_type          = "t2.micro"
  subnet_id              = aws_subnet.demo_subnet.id
  vpc_security_group_ids = [aws_security_group.demo_vpc_sg.id]

}

resource "aws_vpc" "demo_vpc" {
  cidr_block = "10.10.0.0/16"

}

resource "aws_subnet" "demo_subnet" {
  vpc_id     = aws_vpc.demo_vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    name = "demo_subnet"
  }
}
resource "aws_internet_gateway" "demo_igw" {
  vpc_id = aws_vpc.demo_vpc.id

  tags = {
    name = "demo_igw"
  }
}
resource "aws_route_table" "demo_rt" {
  vpc_id = aws_vpc.demo.vpc_id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gatewaydemo_igw.id
  }
  tags = {
    name = "demo_rt"
  }

}
//associate subnets with routes
resource "aws_route_table_association" "demo_rt_association" {
  subnet_id      = aws_subnet.demo_subnet.id
  route_table_id = aws_route_table.demo_rt.id
}
//security group
resource "aws_security_group" "demo_vpc_sg" {
  name        = "demo_vpc_sg"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.demo_vpc.id

  ingress {
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}
